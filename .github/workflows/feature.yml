name: Java CI with Maven

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Serenity
        uses: actions/checkout@v3
        with:
          path: serenity
          repository: cabinetoffice/gap-serenity-bdd-prototype
          ref: main

      - name: Checkout API
        uses: actions/checkout@v3
        with:
          path: api

      - name: Setup SAM
        uses: aws-actions/setup-sam@v1
        with:
          path: api

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        working-directory: ./api
        run: mvn -B package --file pom.xml -DskipTests

      - name: Dependency check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: DependencyCheck
        with:
          project: "gap-find-open-data-api"
          path: "."
          format: "HTML"
          args: >
            --enableRetired
            --disableOssIndex true

      - name: Upload dependency check report
        uses: actions/upload-artifact@master
        with:
          name: DependencyCheck report
          path: ${{github.workspace}}/reports

      - name: Unit tests
        working-directory: ./api
        run: mvn test

#        #check if this step is needed
#      - name: Setup AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: eu-west-2
#
#      - name: Spin up postgress DB
#        working-directory: ./api
#        run: docker compose -f docker-compose-integration-tests.yml up -d
#
#      - name: Build docker container with lambda function and api Gateway with AWS SAM
#        working-directory: ./api
#        # sam build
#        run: sam build --use-container -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -t template.yaml
#
#      - name: Start sam api
#        working-directory: ./api
#        # sam build
#        run: sam local start-api -p 8080 --warm-containers eager --container-host host.docker.internal --docker-network api_testing-network  &
#
#      - name: run docker netwokr ls
#        working-directory: ./api
#        # sam build
#        run: docker network ls
#
#      - name: run docker ps -a
#        working-directory: ./api
#        # sam build
#        run: docker ps -a
#
#      - name: name of the container
#        working-directory: ./api
#        # sam build
#        run: |
#          docker_ps_result=$(docker ps -a --format "{{.Names}}" --filter "ancestor=public.ecr.aws/lambda/java:17-rapid-x86_64")
#          echo "DOCKER_PS_RESULT=$docker_ps_result" >> $GITHUB_ENV
#          echo $DOCKER_PS_RESULT
#
#      - name: list container inside network
#        working-directory: ./api
#        # sam build
#        run: docker network inspect api_testing-network
#
#      - name: Run Integration Tests
#        working-directory: ./api
#        run: docker run --name newman-tests -v /home/runner/work/gap-find-open-data-api/gap-find-open-data-api/api/integrationTests:/opt/newman --network api_testing-network postman/newman run /opt/newman/api.postman_collection.json --env-var "host-name=$DOCKER_PS_RESULT"
#
#      - name: Log Integration Test Results
#        if: always()
#        working-directory: ./api
#        run: docker logs -t serenity-prototype
#
#      - name: Copy Serenity Report
#        working-directory: ./serenity
#        run: docker cp serenity-prototype:/usr/src/serenity/target/site ${{github.workspace}}/serenity/reports
#
#      - name: Upload Serenity Report
#        uses: actions/upload-artifact@master
#        with:
#          name: Serenity report
#          path: ${{github.workspace}}/serenity/reports