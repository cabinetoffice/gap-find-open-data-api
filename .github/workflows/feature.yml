name: Java CI with Maven

env:
  JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
  JWT_TOKEN: ${{secrets.JWT_TOKEN}}

on:
  push:
    branches:
      - feature/**
      - TMI2-**
      - bug/**
  pull_request:
    branches:
      - feature/**
      - TMI2-**
      - bug/**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout API
        uses: actions/checkout@v3
        with:
          path: api

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        working-directory: ./api
        run: mvn -B package --file pom.xml -DskipTests

      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: DependencyCheck
        with:
          project: "gap-find-open-data-api"
          path: "."
          format: "HTML"
          args: >
            --failOnCVSS 7.0
            --enableRetired
            --disableOssIndex true
            --suppression "\dependency-check-suppression.xml"

      - name: Upload Dependency Check Report
        if: success() || failure()
        uses: actions/upload-artifact@master
        with:
          name: Dependency Check Report
          path: ${{github.workspace}}/reports

#            - name: Unit tests
#              working-directory: ./api
#              run: mvn test

      - name: Build Integration Environment
        working-directory: ./api
        run: |
          mvn spring-boot:build-image -DskipTests
          docker compose -f docker-compose-integration-tests.yml up -d

      - name: Let's nap for 30 seconds to make sure the app has started
        run: |
          sleep 30

      # TODO look into moving these docker steps into docker-compose.yml
      - name: Run Integration Tests
        working-directory: ./api
        #Newman needs an absolute path here. It does not like relative paths.
        run: docker run --name newman-tests 
              -v /home/runner/work/gap-find-open-data-api/gap-find-open-data-api/api/postman:/opt/newman 
              --network api_testing-network
              postman/newman run /opt/newman/api.postman_collection.json
              -e /opt/newman/Integration_Tests.postman_environment.json
              --env-var "JWT_SECRETKEY=${JWT_SECRET_KEY}"
              --env-var "JWT_TOKEN=${JWT_TOKEN}"

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          images: gap-find-open-data-api