name: Push Image Workflow

on:
  create:
  push:
    branches:
      - release/**
      - develop
    paths-ignore:
      - '*.md'

env:
  AWS_REGION: eu-west-2

jobs:
  build:
    name: Build Feature

    # Need to check here as create event can't be filtered by branch name...
    if: github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release')

    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout API
        uses: actions/checkout@v3
        with:
          path: api

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        working-directory: ./api
        run: mvn -B package --file pom.xml -DskipTests

      - name: Dependency check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: DependencyCheck
        with:
          project: "gap-find-open-data-api"
          path: "."
          format: "HTML"
          args: >
            --enableRetired
            --disableOssIndex true

      - name: Upload dependency check report
        uses: actions/upload-artifact@master
        with:
          name: DependencyCheck report
          path: ${{github.workspace}}/reports

      - name: Unit tests
        working-directory: ./api
        run: mvn test

  imageBuild:
    needs: build

    environment: AWS
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app_name: ['gap-find-open-data-api']

    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all commits since we use the total commit count to determine the build version
          fetch-depth: 0

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Determine & set BUILD_VERSION
        run: |
          GIT_COUNT=$(git rev-list $GITHUB_SHA --count)
          echo "BUILD_VERSION=b_$GIT_COUNT" >> $GITHUB_ENV
          echo BUILD_VERSION is ${{ env.BUILD_VERSION }}

      - name: Build, tag and push Docker image to AWS ECR
        working-directory: ./api
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build --build-arg APP_NAME=${{ matrix.app_name }} -t $ECR_REGISTRY/${{ matrix.app_name }}:${{ env.BUILD_VERSION }} .
          docker push $ECR_REGISTRY/${{ matrix.app_name }}:${{ env.BUILD_VERSION }}

      - name: Create env tag
        working-directory: ./api
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          ENV_TAG=${{ (github.ref == 'refs/heads/develop' && 'develop') || (startsWith(github.ref, 'refs/heads/release') && 'qa') }}
          docker tag $ECR_REGISTRY/${{ matrix.app_name }}:${{ env.BUILD_VERSION }} $ECR_REGISTRY/${{ matrix.app_name }}:$ENV_TAG
          docker push $ECR_REGISTRY/${{ matrix.app_name }}:$ENV_TAG

      - name: Create release tag - if we are committing to a release branch
        working-directory: ./api
        if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          RELEASE_VERSION=V_${GITHUB_REF##*/}
          docker tag $ECR_REGISTRY/${{ matrix.app_name }}:${{ env.BUILD_VERSION }} $ECR_REGISTRY/${{ matrix.app_name }}:$RELEASE_VERSION
          docker push $ECR_REGISTRY/${{ matrix.app_name }}:$RELEASE_VERSION